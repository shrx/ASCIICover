#!/bin/bash

# released under Creative Commons Attribution-ShareAlike 3.0
# http://creativecommons.org/licenses/by-sa/3.0/
# v1.3.2
# 9. 3. 2012
# dependencies: libcaca, mpc, mpd

#setting optional arguments
rflag=

while getopts :r name
do
	case $name in
	r)	rflag=1;;
	?)	printf "Usage: Resize window: [-r]\n"
		exit 2;;
	esac
done

#defining functions
function ascii {
	path=$(mpc -f %file% current)
	lib1=$(grep -a -m 1 music_directory ~/.mpdconf)
	lib2=$(echo ${lib1%\"*})
	librarypath=$(echo ${lib2#*\"})
	dirpath=$(dirname "$path")
	folderpath=$(echo $librarypath"/"$dirpath"/folder.jpg")
	height=$(tput lines)
	width=$(echo "$height*1.87"|bc)
	if [ -f "$folderpath" ]; then
		art=$(img2txt -H $height -W $width --dither none "$folderpath")
		echo -e "$art""\c"
	else
		clear
		art=
	fi
}

#setting terminal window parameters
clear
printf "\033]2;ASCIICover\007"
ARGUMENTS="none"
read -s -t 1 -n 1 ARGUMENTS
terminal=$(echo $TERM_PROGRAM)
	#optional resizing
if [ -n "$rflag" ]; then
	if [[ "$terminal" == "iTerm.app" && ! -z "$(defaults read com.googlecode.iterm2|grep "\"Disable Window Resizing\" = 1;")" ]]; then
		osascript -e 'tell app "iterm" to set the bounds of the first window to {140, 120, 140+400-12, 120+400+6}'
	else
		printf "\033[4;388;380t"
	fi
fi
tput civis

#running the main loop
ascii
cols=$(tput cols)
while [ "$ARGUMENTS" != "q" ]; do
	if [[ "$(dirname "$(mpc -f %file% current)")" != "$dirpath" || "$(tput lines)" != "$height" || "$(tput cols)" != "$cols" || "$ARGUMENTS" == "r" ]]; then
		ascii
		cols=$(tput cols)
		ARGUMENTS="none"
	elif [ -z "$(mpc current)" ]; then
		: #do nothing
	else
		echo -e "$art""\c"
	fi
	sleep 1
	read -s -t 1 -n 1 ARGUMENTS
done

#resetting terminal window back to normal
tput cnorm
printf "\033]2;\007"
clear
exit